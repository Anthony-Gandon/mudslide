#!/bin/bash

let failures=0

base=$(dirname $0)
#fssh=$base/../fssh.py
#surface=$base/../surface.py
fssh=fssh
surface=surface
check_trace=$base/check_trace.py

trim() {
  echo -n "$1"
}

# do simple tests first
for k in 8 14 20; do
  outfile=$base/simple/k${k}/k${k}.out
  reffile=${outfile%out}ref
  checkfile=${outfile%out}check

  printf "    %-80s\r" "Running Tully's simple avoided crossing with k = $k a.u."

  $fssh -s 1 -m simple -k $k $k -x -10 --dt 5 -n 1 -z 200 -o "single" -j 1 > $outfile
  $check_trace $outfile $reffile ffffffffffd > $checkfile
  ktest=$(trim $(cat $checkfile))

  if [ "$ktest" != "pass" ]; then
      printf "%-80s\n" "Tully's simple avoided crossing with input momentum = $k au failed!"
      cat $checkfile
      let failures+=1
  fi
done

# do dual avoided crossing tests next
for k in 20 50 100; do
  outfile=$base/dual/k${k}/k${k}.out
  reffile=${outfile%out}ref
  checkfile=${outfile%out}check

  printf "    %-80s\r" "Running Tully's dual avoided crossing with k = $k a.u."

  $fssh -s 1 -m dual -k $k $k -x -10 --dt 5 -n 1 -z 200 -o "single" -j 1 > $outfile
  $check_trace $outfile $reffile ffffffffffd > $checkfile
  ktest=$(trim $(cat $checkfile))

  if [ "$ktest" != "pass" ]; then
      printf "%-80s\n" "Tully's dual avoided crossing with input momentum = $k au failed!"
      cat $checkfile
      let failures+=1
  fi
done

# do extended tests next
for k in 10 15 20; do
  outfile=$base/extended/k${k}/k${k}.out
  reffile=${outfile%out}ref
  checkfile=${outfile%out}check

  printf "    %-80s\r" "Running Tully's extended model with k = $k a.u."

  $fssh -s 1 -m extended -k $k $k -x -10 --dt 5 -n 1 -z 200 -o "single" -j 1 > $outfile
  $check_trace $outfile $reffile ffffffffffd > $checkfile
  ktest=$(trim $(cat $checkfile))

  if [ "$ktest" != "pass" ]; then
      printf "%-80s\n" "Tully's extended model with input momentum = $k au failed!"
      cat $checkfile
      let failures+=1
  fi
done

printf "    %-80s\r" "Checking surface writer"
for model in "simple" "extended" "dual" "super"; do
  outfile=$base/surface/$model/$model.out
  reffile=${outfile%out}ref
  checkfile=${outfile%out}check

  totest="ffffffff"
  if [ "$model" == "super" ]; then
    totest="fffffffffffff"
  fi

  $surface -m $model -r -11 11 -n 200 > $outfile
  $check_trace $outfile $reffile $totest > $checkfile
  stest=$(trim $(cat $checkfile))

  if [ "$stest" != "pass" ]; then
      printf "%-80s\n" "Surface writer for $model model failed!"
      cat $checkfile
      let failures+=1
  fi
done

if [ $failures -eq 0 ]; then
  printf "%-84s\n" "All tests passed!"
else
  printf "%-84s\n" "Tests finished with $failures failures"
  exit 1
fi
